<?xml version="1.0" encoding="utf-8"?>
<project name="PHPStan Disallow Float Rules" default="check">
	<property name="path.composer-require-checker"
			  value="tmp/composer-require-checker-1.1.0.phar"/>
	<property name="url.composer-require-checker"
			  value="https://github.com/maglnet/ComposerRequireChecker/releases/download/1.1.0/composer-require-checker.phar"/>
	<target name="check" depends="
		composer-validate,
		composer-install,
		lint,
		cs,
		composer-normalize-check,
		composer-require-checker,
		tests,
		phpstan
	"/>

	<target name="composer-validate">
		<exec
				executable="composer"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="validate"/>
			<arg value="--ansi"/>
		</exec>
	</target>

	<target name="composer-install">
		<exec
				executable="composer"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="install"/>
			<arg value="--ansi"/>
		</exec>
	</target>

	<target name="composer-normalize-check">
		<exec
				executable="composer"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="normalize"/>
			<arg value="--ansi"/>
			<arg value="--dry-run"/>
		</exec>
	</target>

	<target name="composer-normalize-fix">
		<exec
				executable="composer"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="normalize"/>
			<arg value="--ansi"/>
		</exec>
	</target>

	<target name="composer-require-checker">
		<if>
			<and>
				<not>
					<available file="${path.composer-require-checker}"/>
				</not>
				<not><os family="windows"/></not>
			</and>
			<then>
				<exec
						executable="wget"
						logoutput="true"
						passthru="true"
						checkreturn="true"
				>
					<arg value="-O"/>
					<arg path="${path.composer-require-checker}"/>
					<arg value="${url.composer-require-checker}"/>
				</exec>
			</then>
		</if>
		<if>
			<available file="${path.composer-require-checker}"/>
			<then>
				<exec
						executable="php"
						logoutput="true"
						passthru="true"
						checkreturn="true"
				>
					<arg path="${path.composer-require-checker}"/>
					<arg value="check"/>
					<arg value="--config-file"/>
					<arg path="${project.basedir}/composer-require-checker.json"/>
					<arg path="composer.json"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="lint">
		<exec
				executable="vendor/bin/parallel-lint"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors"/>
			<arg path="src" />
			<arg path="tests"/>
		</exec>
	</target>

	<target name="cs">
		<exec
				executable="vendor/bin/phpcs"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors"/>
			<arg value="--extensions=php"/>
			<arg value="--encoding=utf-8"/>
			<arg value="--tab-width=4"/>
			<arg value="--cache=tmp/phpcs"/>
			<arg value="-sp"/>
			<arg path="src"/>
			<arg path="tests"/>
		</exec>
	</target>

	<target name="cs-fix">
		<exec
				executable="vendor/bin/phpcbf"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors"/>
			<arg value="--extensions=php"/>
			<arg value="--encoding=utf-8"/>
			<arg value="--tab-width=4"/>
			<arg value="-sp"/>
			<arg path="src"/>
			<arg path="tests"/>
		</exec>
	</target>

	<target name="test-configuration-validate" depends="composer-install">
		<xmllint schema="vendor/phpunit/phpunit/phpunit.xsd" file="tests/phpunit.xml"/>
	</target>

	<target name="tests">
		<exec
				executable="vendor/bin/phpunit"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="-c"/>
			<arg value="tests/phpunit.xml"/>
			<arg path="tests"/>
		</exec>
	</target>

	<target name="phpstan">
		<exec
				executable="vendor/bin/phpstan"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="analyse"/>
		</exec>
	</target>

</project>
